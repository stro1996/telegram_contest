{"version":3,"sources":["components/Field.js","utils/getValue.js","components/Chart.js","components/BottomCharts.js","components/Charts.js","components/BottomMeasure.js","components/Button.js","const/constFor–°alculations.js","utils/getCoefficient.js","App.js","utils/getValueOfRange.js","serviceWorker.js","index.js"],"names":["Field","_this$props","this","props","heightGap","width","maxValue","arrForRender","Math","floor","react_default","a","createElement","map","item","index","positionByY","Fragment","key","style","position","top","fontSize","react_lineto","borderColor","x0","y0","x1","y1","Component","getValue","indexOfChart","indexOfArray","indexElement","data","columns","getLengthOfArray","length","getFirstValueOfArrayOfDate","getMaxValueOFArrayOfDate","getColor","colors","Chart","arrOfLine","heightWithPadding","color","coefficientY","coefficientX","minValue","isCharts","resetIndex","i","targetValue","indexForRenderX","line","stroke","strokeWidth","x2","y2","push","BottomCharts","state","update","getArrayOfLine","_this","arrayOfItems","arrayOfLine","dataIndex","components_Chart","concat","nextProps","nextState","_this$props2","height","newArrayOfItems","newHeight","newWidth","needUpdate","forEach","setState","Charts","BottomMeasure","step","stepByDtae","Date","left","right","toDateString","Button","onPressOnButton","onPress","title","onClick","rangeForBottomBar","getMaxValueOfThisIndex","elementIndex","maxElementInRange","value","getCoefficientYForBottomBar","range","coefficient","checkMaxValue","calculateCoefficient","display","alignItems","justifyContent","border","background","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handelClickOnButton","newArray","toConsumableArray","arrayOfButton","requestAnimationFrame","onDrag","e","d","_this$state","limiter","newLimiter","objectSpread","newX","x","y","onResize","direction","ref","delta","oldX","isResizing","isDragging","updateWindowDimensions","bind","assertThisInitialized","window","addEventListener","removeEventListener","innerHeight","innerWidth","startPosition","firstValue","_this2","_this$state2","heightWithPaddingForCharts","_getCoefficientX","maxQuantity","arrayLength","newMinValue","newMaxValue","stepOfValueX","getCoefficientX","_getValueXOfRange","minValueXOfRange","ceil","maxValueXOfRange","_getValueAndCoefficie","getValueAndCoefficientYForChart","coefficientForCharts","maxValueForCharts","coefficientXForCharts","getCoefficientXForCharts","heightWithPaddingForBottomBar","className","components_Field","components_BottomMeasure","components_Button","lib","dragAxis","size","components_BottomCharts","components_Charts","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.607fc29b.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Line } from 'react-lineto';\n\nclass Field extends Component {\n  render() {\n    const { heightGap, width , maxValue} = this.props;\n    const arrForRender = [\n      maxValue,\n      Math.floor(maxValue * 0.8),\n      Math.floor(maxValue * 0.6),\n      Math.floor(maxValue * 0.4),\n      Math.floor(maxValue * 0.2),\n      0\n    ];\n    return (\n      <div>\n        {\n          arrForRender.map((item, index) => {\n            const positionByY = heightGap * (index + 1);\n            return (\n              <React.Fragment key={index}>\n                <div style={{position: 'absolute', top: positionByY - 50}}>\n                  <p style={{fontSize: '20px'}}>{item}</p>\n                </div>\n                <Line\n                  borderColor={'gray'}\n                  x0={0}\n                  y0={positionByY}\n                  x1={width}\n                  y1={positionByY}\n                />\n              </React.Fragment>\n            );\n          })\n        }\n      </div>\n    )\n  }\n}\n\nexport default Field;\n","import data from \"../chart_data\";\n\nexport const getValue = (indexOfChart, indexOfArray, indexElement) => {\n  return data\n    && data[indexOfChart]\n    && data[indexOfChart].columns\n    && data[indexOfChart].columns[indexOfArray]\n    && data[indexOfChart].columns[indexOfArray][indexElement];\n};\n\nexport const getLengthOfArray = (index) => {\n  return data\n    && data[index]\n    && data[index].columns\n    && data[index].columns[0]\n    && data[index].columns[0].length;\n};\n\nexport const getChartsQantity = (index) => {\n  return data\n    && data[index]\n    && data[index].columns\n    && data[index].columns\n    && data[index].columns.length - 1;\n};\n\nexport const getFirstValueOfArrayOfDate = (index) => {\n  return data\n    && data[index]\n    && data[index].columns\n    && data[index].columns[0]\n    && data[index].columns[0][1];\n};\n\nexport const getMaxValueOFArrayOfDate = (index) => {\n  return data\n    && data[index]\n    && data[index].columns\n    && data[index].columns[0]\n    && data[index].columns[0][data[index].columns[0].length - 1];\n};\n\n\nexport const getColor = (index, key) => {\n  return data\n    && data[index]\n    && data[index].colors\n    && data[index].colors[key];\n};\n","import React from 'react';\nimport { Line } from 'react-lineto';\nimport { getValue, getLengthOfArray } from '../utils/getValue';\n\nconst Chart = (props) => {\n  const arrOfLine = [];\n  const { heightWithPadding, index, color, coefficientY, coefficientX, minValue, maxValue, isCharts } = props;\n  let resetIndex = 0;\n  for (let i = 0; i < getLengthOfArray(4); i++) {\n\n    const targetValue = getValue(4, 0, i);\n    if (i !== 0 && (targetValue > maxValue ||  targetValue < minValue)) {\n      resetIndex = i;\n      continue;\n    }\n\n    const indexForRenderX = isCharts ? (i - 1) - resetIndex : i;\n    if (i === getLengthOfArray(4) - 1) {\n      continue\n    }\n    //borderColor={color}\n    const line = <line\n      stroke={color}\n      strokeWidth={2}\n      x1={i === 0 ? 0 : coefficientX * indexForRenderX}\n      y1={i === 0 ? heightWithPadding : heightWithPadding - (getValue(4, index, i) / coefficientY)}\n      x2={coefficientX * indexForRenderX + coefficientX}\n      y2={heightWithPadding - ((getValue(4,index, i + 1) / coefficientY))}\n    />;\n\n    arrOfLine.push(line);\n  }\n\n  return arrOfLine;\n};\n\nexport default Chart;\n","import React, { Component } from 'react';\nimport { getColor } from '../utils/getValue';\nimport Chart from './Chart';\n\nclass BottomCharts extends Component {\n\n  state = {\n    update: false,\n  };\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const { arrayOfItems, width, height } = this.props;\n    const { arrayOfItems: newArrayOfItems, height: newHeight, width: newWidth } = nextProps;\n    const { update } = this.state;\n    let needUpdate = false;\n    if (!update) {\n      return true;\n    }\n\n    if (width !== newWidth || height !== newHeight) {\n      return true\n    }\n\n    arrayOfItems.forEach((item, index) => {\n      if (item !== newArrayOfItems[index]) {\n        needUpdate = true;\n      }\n    });\n\n    return needUpdate;\n  }\n\n  componentDidMount() {\n    this.setState({ update: true });\n  }\n\n  getArrayOfLine = () => {\n    const { arrayOfItems, coefficientY, coefficientX, heightWithPadding, minValue, maxValue } = this.props;\n    let arrayOfLine = [];\n    for (let dataIndex = 0; dataIndex < arrayOfItems.length; dataIndex++) {\n      if (arrayOfItems[dataIndex] === null) {\n        arrayOfLine.push(null);\n        continue;\n      }\n\n      arrayOfLine.push(<Chart\n        key={dataIndex}\n        index={dataIndex + 1}\n        color={getColor(4, `y${dataIndex}`)}\n        coefficientY={coefficientY}\n        coefficientX={coefficientX}\n        minValue={minValue}\n        maxValue={maxValue}\n        heightWithPadding={heightWithPadding}\n      />);\n    }\n\n    return arrayOfLine;\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        {this.getArrayOfLine()}\n      </React.Fragment>\n    );\n  };\n}\n\nexport default BottomCharts;\n","import React, { Component } from 'react';\nimport Chart from \"./Chart\";\nimport {getColor, getValue} from \"../utils/getValue\";\n\nclass Charts extends Component {\n\n  getArrayOfLine = () => {\n    const { arrayOfItems, coefficientY, coefficientX, height, minValue, maxValue, heightWithPadding, isCharts } = this.props;\n    let arrayOfLine = [];\n    for (let dataIndex = 0; dataIndex < arrayOfItems.length; dataIndex++) {\n\n      if (arrayOfItems[dataIndex] === null) {\n        arrayOfLine.push(null);\n        continue;\n      }\n\n      const firstValue = getValue(4, 0, 1);\n      if (firstValue > maxValue) {\n        continue;\n      }\n\n      arrayOfLine.push(<Chart\n        key={dataIndex}\n        height={height}\n        index={dataIndex + 1}\n        color={getColor(4, `y${dataIndex}`)}\n        coefficientY={coefficientY}\n        coefficientX={coefficientX}\n        minValue={minValue}\n        maxValue={maxValue}\n        heightWithPadding={heightWithPadding}\n        isCharts={isCharts}\n      />);\n    }\n\n    return arrayOfLine;\n  };\n\n\n\n  render() {\n    return (\n      <React.Fragment>\n        {this.getArrayOfLine()}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Charts;\n","import React, { Component } from 'react';\n\nclass BottomMeasure extends Component {\n  render() {\n    const { maxValue, step, positionByY, width, minValue, stepByDtae } = this.props;\n    const arrForRender = [\n      new Date(minValue),\n      new Date(Math.floor(maxValue - (stepByDtae * 4))),\n      new Date(Math.floor(maxValue - (stepByDtae * 3))),\n      new Date(Math.floor(maxValue - (stepByDtae * 2))),\n      new Date(Math.floor(maxValue - stepByDtae )),\n      new Date(maxValue),\n    ];\n    return (\n      <div>\n        {\n          arrForRender.map((item, index) => {\n            const positionByX = step * index;\n            const style = index !== 5\n              ? {\n                  position: 'absolute',\n                  top: positionByY,\n                  left: positionByX,\n                }\n              : {\n                  position: 'absolute',\n                  top: positionByY,\n                  right: 0,\n                }\n            return (\n              <div key={index} style={style}>\n                <p style={{fontSize: '1em'}}>{(item.toDateString())}</p>\n              </div>\n            )\n          })\n        }\n      </div>\n    );\n  }\n}\n\nexport default BottomMeasure;\n","import React, { Component } from 'react';\n\nclass Button extends Component {\n\n  onPressOnButton = () => {\n    const { index, onPress } = this.props;\n    onPress(index);\n  };\n\n  render() {\n    const { title } = this.props;\n    return (\n      <button onClick={this.onPressOnButton}>\n        <p>{title}</p>\n      </button>\n    )\n  }\n}\n\nexport default Button;\n","export const rangeForBottomBar = 100;\nexport const workHeightCoefficient = 0.7;\n","import { getLengthOfArray, getValue, getFirstValueOfArrayOfDate, getMaxValueOFArrayOfDate, getChartsQantity } from \"./getValue\";\n\nconst getMaxValueOfThisIndex = (elementIndex, data) => {\n  let maxElementInRange = getValue(4, 1, elementIndex);\n  if (data[0] === null) {\n    maxElementInRange = 0;\n  }\n\n  for (let i = 2; i <= getChartsQantity(4); i++) {\n    let value = getValue(4, i, elementIndex);\n    if (data[i - 1] === null) {\n      value = 0;\n    }\n\n    if (value > maxElementInRange) {\n      maxElementInRange = value;\n    }\n  }\n\n  return maxElementInRange;\n};\n\nexport const getCoefficientYForBottomBar = (data, range) => {\n  let coefficient = 1;\n  let maxValue = 1;\n\n  // for (let dataIndex = 0; dataIndex < data.length; dataIndex++) {\n  //   if (data[dataIndex] === null) {\n  //     continue;\n  //   }\n\n    for (let elementIndex = 1; elementIndex < getLengthOfArray(4); elementIndex++) {\n      let maxElementInRange = getMaxValueOfThisIndex(elementIndex, data);\n\n      if (maxValue < maxElementInRange) {\n        maxValue = maxElementInRange;\n        coefficient = checkMaxValue(maxValue, coefficient, range);\n      }\n    }\n  // }\n\n  return coefficient;\n};\n\nconst checkMaxValue = (maxValue, coefficient, range) => {\n  if (maxValue > range) {\n    return calculateCoefficient(maxValue, range);\n  }\n\n  return coefficient;\n};\n\nconst calculateCoefficient = (maxValue, range) => {\n  return maxValue / range;\n};\n\nexport const getCoefficientX = (data, width) => {\n  let maxQuantity = 1;\n  let minValue = getFirstValueOfArrayOfDate(4);\n  let maxValue = getMaxValueOFArrayOfDate(4);\n  let step = 0;\n  for (let dataIndex = 0; dataIndex < data.length; dataIndex++) {\n    if (data[dataIndex] === null) {\n      continue;\n    }\n    const arrayLength = getLengthOfArray(4);\n    const newMinValue = getFirstValueOfArrayOfDate(4);\n    const newMaxValue = getMaxValueOFArrayOfDate(4);\n    step = getValue(4, 0, 2) - getValue(4, 0, 1);\n\n    if (minValue > newMinValue) {\n      minValue = newMinValue;\n    }\n\n    if (maxValue < newMaxValue ) {\n      maxValue  = newMaxValue;\n    }\n\n    if (arrayLength > maxQuantity) {\n      maxQuantity = arrayLength;\n    }\n  }\n\n  const coefficientX = (width - 20) / maxQuantity;\n\n  const stepOfValueX =  Math.floor(step) / coefficientX;\n\n  return {\n    coefficientX,\n    stepOfValueX,\n    minValue,\n    maxValue,\n  };\n};\n\n\nexport const getValueAndCoefficientYForChart = (data, minValueXOfRange, maxValueXOfRange, range) => {\n  let coefficient = 1;\n  let maxValue = 1;\n  // for (let dataIndex = 0; dataIndex < data.length; dataIndex++) {\n  //   if (data[dataIndex] === null) {\n  //     continue;\n  //   }\n\n    // const firstValue = getValue(4, 0, 1);\n    // if (firstValue > maxValueXOfRange) {\n    //   continue;\n    // }\n\n    for (let elementIndex = 1; elementIndex < getLengthOfArray(4); elementIndex++) {\n      const targetValue = getValue(4, 0, elementIndex);\n      if (targetValue > maxValueXOfRange ||  targetValue < minValueXOfRange) {\n        continue;\n      }\n      let maxElementInRange = getMaxValueOfThisIndex(elementIndex, data);\n\n      if (maxValue < maxElementInRange) {\n        maxValue = maxElementInRange;\n        coefficient = checkMaxValue(maxValue, coefficient, range);\n      }\n    }\n  // }\n\n  return {\n    coefficient,\n    maxValue\n  };\n};\n\nexport const getCoefficientXForCharts = (width, minValueXOfRange, maxValueXOfRange, coefficientX, stepOfValueX) => {\n  return (width - 20) / Math.ceil(((maxValueXOfRange - minValueXOfRange) / stepOfValueX) / coefficientX);\n};\n","import React, { Component } from 'react';\nimport './App.css';\n\nimport { Rnd } from \"react-rnd\";\n\nimport Field from './components/Field';\nimport BottomCharts from './components/BottomCharts';\nimport Charts from './components/Charts';\nimport BottomMeasure from './components/BottomMeasure';\nimport Button from './components/Button';\nimport { workHeightCoefficient } from './const/constFor–°alculations';\nimport {\n  getCoefficientYForBottomBar,\n  getCoefficientX,\n  getValueAndCoefficientYForChart,\n  getCoefficientXForCharts,\n} from './utils/getCoefficient';\nimport { getValueXOfRange } from './utils/getValueOfRange';\nimport { rangeForBottomBar } from \"./const/constFor–°alculations\";\n\nconst style = {\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  border: \"solid 1px #ddd\",\n  background: \"transparent\"\n};\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      arrayOfButton: [0, 1, 2, 3],\n      width: 200,\n      height: 200,\n      coefficientY: 1,\n      limiter: {\n        x: 0,\n        y: 650,\n        width: 100,\n        height: 100,\n        isResizing: false,\n        isDragging: false,\n      },\n    };\n\n    this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\n  }\n\n  componentDidMount() {\n    const { arrayOfButton } = this.state;\n    this.updateWindowDimensions();\n    const coefficientY = getCoefficientYForBottomBar(arrayOfButton, rangeForBottomBar);\n    this.setState({ coefficientY });\n    window.addEventListener('resize', this.updateWindowDimensions);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.updateWindowDimensions);\n  }\n\n  updateWindowDimensions() {\n    const newLimiter =  { ...this.state.limiter };\n    newLimiter.y = (window.innerHeight * workHeightCoefficient) + 50;\n    this.setState({\n      width: window.innerWidth,\n      height: window.innerHeight,\n      limiter: newLimiter,\n    });\n  }\n\n  handelClickOnButton = (index) => {\n    let newArray = [...this.state.arrayOfButton];\n    const targetValue = newArray[index];\n\n    if (targetValue !== null) {\n      newArray[index] = null;\n    } else {\n      newArray[index] = index;\n    }\n\n    const coefficientY = getCoefficientYForBottomBar(newArray, rangeForBottomBar);\n\n    requestAnimationFrame(() => {\n      this.setState({\n        arrayOfButton: newArray,\n        coefficientY,\n      });\n    })\n  };\n\n  onDrag = (e, d) => {\n    const { limiter, width } = this.state;\n    const newLimiter = { ...limiter };\n    let newX = d.x;\n    if (newX < 0) {\n      newX = 0;\n    }\n\n    if (newX > width - limiter.width) {\n      newX = width;\n    }\n\n    newLimiter.x = newX;\n    newLimiter.y = limiter.y;\n    requestAnimationFrame(() => {\n      this.setState({\n        limiter: newLimiter,\n      });\n    });\n  };\n\n  onResize = (e, direction, ref, delta, position) => {\n    const { limiter } = this.state;\n    const newLimiter = { ...limiter };\n\n    if (direction === 'right') {\n      newLimiter.width = e.x - newLimiter.x;\n    }\n\n    if (direction === 'left') {\n      const oldX = newLimiter.x;\n      newLimiter.x = e.x;\n      newLimiter.width += (oldX - e.x);\n    }\n\n    requestAnimationFrame(() => {\n      this.setState({\n        limiter: newLimiter,\n      });\n    });\n  };\n\n  render() {\n    const { width, height, limiter, coefficientY, arrayOfButton } = this.state;\n\n    const heightWithPaddingForCharts = (height * workHeightCoefficient);\n    const { coefficientX, stepOfValueX, minValue, maxValue } = getCoefficientX(arrayOfButton, width);\n    const { minValueXOfRange, maxValueXOfRange } = getValueXOfRange(limiter.x - coefficientX, limiter.width, minValue, stepOfValueX, coefficientX);\n    const {\n      coefficient: coefficientForCharts,\n      maxValue: maxValueForCharts\n    } = getValueAndCoefficientYForChart(arrayOfButton, minValueXOfRange, maxValueXOfRange, heightWithPaddingForCharts - heightWithPaddingForCharts / 6 );\n    const coefficientXForCharts = getCoefficientXForCharts(width, minValueXOfRange, maxValueXOfRange, coefficientX, stepOfValueX);\n\n    const heightWithPaddingForBottomBar = heightWithPaddingForCharts + 150;\n\n    return (\n      <div className=\"App\" style={{position: 'relative'}}>\n        <Field\n          maxValue={maxValueForCharts}\n          width={width}\n          heightGap={heightWithPaddingForCharts / 6}\n        />\n\n        <BottomMeasure\n          maxValue={maxValueXOfRange}\n          step={width / 6}\n          stepByDtae={(maxValueXOfRange - minValueXOfRange) / 5}\n          positionByY={heightWithPaddingForCharts}\n          width={width}\n          minValue={minValueXOfRange}\n        />\n\n        <div style={{position: 'absolute', top: height - 50}}>\n          {\n            arrayOfButton.map((item, index) =>\n              <Button\n                key={index}\n                index={index}\n                title={'title'}\n                onPress={this.handelClickOnButton}\n              />\n            )\n          }\n        </div>\n        <Rnd\n          style={style}\n          dragAxis={'x'}\n          size={{ width: limiter.width, height: limiter.height }}\n          position={{ x: limiter.x, y: limiter.y }}\n          onDrag={this.onDrag}\n          onResize={this.onResize}\n        >\n        </Rnd>\n        <svg width={width} height={height}>\n          <BottomCharts\n            coefficientY={coefficientY}\n            coefficientX={coefficientX}\n            arrayOfItems={arrayOfButton}\n            minValue={minValue}\n            maxValue={maxValue}\n            width={width}\n            heightWithPadding={heightWithPaddingForBottomBar}\n          />\n          <Charts\n            coefficientY={coefficientForCharts}\n            coefficientX={coefficientXForCharts}\n            arrayOfItems={arrayOfButton}\n            minValue={minValueXOfRange}\n            maxValue={maxValueXOfRange}\n            width={width}\n            heightWithPadding={heightWithPaddingForCharts}\n            isCharts={true}\n            height={height}\n          />\n        </svg>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","export const getValueXOfRange = (startPosition, range, firstValue, step, coefficientX) => {\n  const minValueXOfRange = Math.ceil(startPosition  * step ) + firstValue;\n  const maxValueXOfRange = Math.ceil((startPosition + range) * step ) + firstValue;\n\n  return {\n    minValueXOfRange,\n    maxValueXOfRange,\n  };\n};\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}